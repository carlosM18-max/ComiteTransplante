# Generated by Django 5.0.1 on 2024-04-17 01:51

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('apis', 'funciones_transplantes'),
    ]

    operations = [
        migrations.RunSQL(
            '''
                DROP TRIGGER IF EXISTS solicitud_transplantes_BEFORE_INSERT;
                DROP TRIGGER IF EXISTS solicitud_transplantes_AFTER_INSERT;
                DROP TRIGGER IF EXISTS solicitud_transplantes_AFTER_UPDATE;
                DROP TRIGGER IF EXISTS solicitud_transplantes_AFTER_DELETE;
            '''),
        # ----------------- TRIGGERS DE LA TABLA DE SOLICITUDES ---------------------
        migrations.RunSQL(
            '''
                CREATE TRIGGER `solicitud_transplantes_BEFORE_INSERT` BEFORE INSERT ON `solicitud_transplantes` FOR EACH ROW BEGIN
                    -- Calcula los días de espera
                    SET NEW.dias_espera = fn_calcular_dias_espera(new.fecha_solicitud);
                END
            '''
        ),
        migrations.RunSQL(
            '''
                CREATE TRIGGER `solicitud_transplantes_AFTER_INSERT` AFTER INSERT ON `solicitud_transplantes` FOR EACH ROW BEGIN
                    DECLARE nombre_persona VARCHAR(255);
                    DECLARE nombre_paciente VARCHAR(150) DEFAULT NULL;
                    DECLARE nombre_medico VARCHAR(100) DEFAULT NULL;
                    DECLARE nombre_organo VARCHAR(100) DEFAULT NULL;
                    
                    -- Obtener el nombre del paciente recién insertado
                    SET nombre_persona = (SELECT IFNULL((SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                            FROM personas p
                                            WHERE p.id = NEW.paciente_ID), "sin Paciente"));

                    -- Obtener el nombre del personal médico recién insertado
                    SET nombre_medico = (SELECT IFNULL((SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                            FROM personas p
                                            WHERE p.id = NEW.medico_ID), "sin Medico"));
                                            
                    SET nombre_organo = (SELECT IFNULL((SELECT nombre FROM organos WHERE id = NEW.organo_ID), "Sin Organo"));

                    INSERT INTO bitacora VALUES (
                        DEFAULT, "solicitud_transplantes", user(), "Insert",
                        CONCAT_WS(" ",'Se ha agregado una nueva solicitud con el ID: ', NEW.ID,
                                    ', Nombre_Paciente: ', nombre_persona,
                                    ', Nombre_Medico: ', nombre_medico,
                                    ', Nombre_Organo: ', nombre_organo, 
                                    ', Prioridad: ', NEW.prioridad,
                                    ', Fecha de Solicitud: ', NEW.fecha_solicitud,
                                    ', Días de Espera: ', NEW.dias_espera,
                                    ', Estatus del Paciente: ', NEW.estatus,
                                    ', Estatus de Aprobación: ', NEW.estatus_aprobacion),
                        now()
                    );

                END
            '''
        ),
        migrations.RunSQL(
            '''
                CREATE TRIGGER `solicitud_transplantes_AFTER_UPDATE` AFTER UPDATE ON `solicitud_transplantes` FOR EACH ROW BEGIN
                    DECLARE nombre_persona_old VARCHAR(100);
                    DECLARE nombre_persona_new VARCHAR(100);
                    DECLARE nombre_persona_cambio BOOl;
                    DECLARE nombre_medico_old VARCHAR(100);
                    DECLARE nombre_medico_new VARCHAR(100);
                    DECLARE nombre_medico_cambio BOOl;
                    DECLARE nombre_organo_old VARCHAR(50);
                    DECLARE nombre_organo_new VARCHAR(50);
                    DECLARE nombre_organo_cambio BOOl;


                    -- Obtener el nombre de la paciente (persona) antes y después de la actualización
                    IF old.paciente_ID <> new.paciente_ID then 
                        set nombre_persona_cambio = true;
                    else 
                        set nombre_persona_cambio = false;
                    end if ;
                    if nombre_persona_cambio then 
                        SET nombre_persona_old = (SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                                FROM personas p
                                                WHERE p.id = OLD.paciente_ID);
                    
                    SET nombre_persona_new = (SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                            FROM personas p
                                            WHERE p.id = NEW.paciente_ID);
                    set  @v_mensaje_Persona = CONCAT  (' Nombre Antiguo Paciente: ', nombre_persona_old,
                                                    ', Nombre Nuevo Paciente: ', nombre_persona_new);
                    else 
                        set  @v_mensaje_Persona = "SIN MODIFICACIONES" ;
                    end if ;
                    
                    
                    -- Obtener el nombre del MEDICO (persona) antes y después de la actualización
                    IF old.medico_ID <> new.medico_ID then 
                        set nombre_medico_cambio = true;
                    else 
                        set nombre_medico_cambio = false;
                    end if ;
                    if nombre_medico_cambio then 
                        SET nombre_medico_old = (SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                                FROM personas p
                                                WHERE p.id = OLD.medico_ID);
                        
                    SET nombre_medico_new = (SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                            FROM personas p
                                            WHERE p.id = NEW.medico_ID);
                    set  @v_mensaje_Medico = CONCAT  (' Nombre Antiguo NuevoMedico: ' , nombre_medico_old,
                                                    ', Nombre Nuevo NuevoMedico: ', nombre_medico_new);
                    else 
                        set  @v_mensaje_Medico = "SIN MODIFICACIONES" ;
                    end if ;

                    -- Obtener el nombre del ORGANO antes y después de la actualización 
                    IF old.organo_ID <> new.organo_ID then 
                        set nombre_organo_cambio = true;
                    else 
                        set nombre_organo_cambio = false;
                    end if ;
                    if nombre_organo_cambio then 
                        SET nombre_organo_old = (SELECT IFNULL((SELECT nombre FROM organos WHERE id = OLD.organo_ID), "Sin Organo"));
                        
                        SET nombre_organo_new = (SELECT IFNULL((SELECT nombre FROM organos WHERE id = NEW.organo_ID), "Sin Organo"));
                        set  @v_mensaje_Organo = CONCAT  (' Nombre Antiguo Organo: ', nombre_organo_old,
                                                        ', Nombre Nuevo Organo: ', nombre_organo_new);
                    else 
                        set  @v_mensaje_Organo = "SIN MODIFICACIONES" ;
                    end if ;

                        
                        
                    -- INSERCCION EN LA TABLA BITACORA
                    INSERT INTO bitacora VALUES (
                        DEFAULT, "solicitud_transplantes", user(), "UPDATE",
                        CONCAT_WS(" ",'Se ha actualizado los datos de la SOLICITUD de la PERSONA con el ID: ', NEW.ID,
                                    ", ", @v_mensaje_Persona,
                                    ", ", @v_mensaje_Medico,
                                    ", ", @v_mensaje_Organo,
                                    ', Prioridad: ', NEW.prioridad,
                                    ', Fecha de Solicitud: ', NEW.fecha_solicitud,
                                    ', Días de Espera: ', NEW.dias_espera,
                                    ', Estatus del Paciente: ', NEW.estatus),
                        now()
                    );
                END
            '''
        ),
        migrations.RunSQL(
            '''
                CREATE TRIGGER `solicitud_transplantes_AFTER_DELETE` AFTER DELETE ON `solicitud_transplantes` FOR EACH ROW BEGIN
                    DECLARE nombre_persona VARCHAR(255);

                    -- Obtener el nombre del paciente eliminado
                    SET nombre_persona = (SELECT CONCAT_WS(" ", p.Nombre, p.Primer_Apellido, p.Segundo_Apellido)
                                        FROM personas p
                                        WHERE p.id = OLD.paciente_ID);

                    INSERT INTO bitacora VALUES (
                        DEFAULT, 'solicitud_transplantes', USER(), 'DELETE',
                        CONCAT_WS(" ", 'Se ha eliminado la SOLICITUD con el ID:', OLD.ID,
                        ', Nombre:', nombre_persona),
                        NOW()
                    );
                END
            '''
        )
    ]
